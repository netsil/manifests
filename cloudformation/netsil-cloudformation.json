{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS Cloudformation script to deploy Netsil AOC",
    "Parameters": {
        "InstanceType": {
            "Description": "Netsil AOC EC2 instance type",
            "Type": "String",
            "Default": "m4.2xlarge",
            "AllowedValues": [
                "t2.xlarge",
                "t2.2xlarge",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "r4.xlarge",
                "r4.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type."
        },
        "VolumeSize": {
            "Description": "Storage size of your EC2 instance",
            "Type": "Number",
            "MinValue": "80",
            "Default": "120",
            "ConstraintDescription": "Size must be greater than or equal to 80 GB."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
        },
        "VPC": {
            "Description": "Name of an existing VPC ID where you will install Netsil AOC",
            "Type": "AWS::EC2::VPC::Id",
            "ConstraintDescription": "Must be the name of an existing VPC."
        },
        "Subnet": {
            "Description": "Name of an existing Subnet ID where you will install Netsil AOC",
            "Type": "AWS::EC2::Subnet::Id",
            "ConstraintDescription": "Must be the name of an existing subnet that is within the vpc you selected."
        },
        "AdminLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances and access the Web UI",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "SGsourceType": {
            "Description": "Choose either 'Cidr' or 'SG'. This will restrict inbound traffic to the AOC from your application instances via Cidr or a security group, respectively",
            "Default": "Cidr",
            "Type": "String",
            "AllowedValues": ["Cidr", "SG"]
        },
        "SGsourceSG": {
            "Description": "If you selected 'SG' for 'SGsourceType', specify the security group of your application instances. Otherwise, please pick the default security group for your VPC.",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "SGsourceVpcCidr": {
            "Description": "If you selected 'Cidr' for 'SGsourceType', specify the Cidr of the VPC of your application instances. Ignore otherwise.",
            "Default": "0.0.0.0/0",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Conditions": {
        "SourceSGfromCidr" : {"Fn::Equals": [{"Ref": "SGsourceType"}, "Cidr"]},
        "SourceSGfromSG": {"Fn::Equals": [{"Ref": "SGsourceType"}, "SG"]}
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "t2.xlarge": {
                "Arch": "HVM64"
            },
            "t2.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.xlarge": {
                "Arch": "HVM64"
            },
            "m4.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.4xlarge": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            },
            "r4.xlarge": {
                "Arch": "HVM64"
            },
            "r4.2xlarge": {
                "Arch": "HVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "HVM64": "ami-dadb53cc"
            },
            "us-east-2": {
                "HVM64": "ami-32b39757"
            },
            "us-west-1": {
                "HVM64": "ami-12597c72"
            },
            "us-west-2": {
                "HVM64": "ami-fa64f49a"
            },
            "eu-west-1": {
                "HVM64": "ami-004c7666"
            },
            "eu-central-1": {
                "HVM64": "ami-0c9a4863"
            },
            "ap-northeast-1": {
                "HVM64": "ami-c36446a4"
            },
            "ap-southeast-1": {
                "HVM64": "ami-4a51ef29"
            },
            "ap-south-1": {
                "HVM64": "ami-968dfef9"
            },
            "sa-east-1": {
                "HVM64": "ami-7a402216"
            }
        }
    },

    "Resources": {
        "NetsilAOC": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Ref": "NetsilAOCPrivateSecurityGroup"
                            },
                            {
                                "Ref": "NetsilAOCPublicSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Ref": "Subnet"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "VolumeSize": { "Ref": "VolumeSize" }
                        }
                    }
                ]
            },
            "DependsOn": [
                "NetsilAOCPublicSecurityGroup",
                "NetsilAOCPrivateSecurityGroup"
            ]
        },
        "NetsilAOCPrivateSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Private VPC between Netsil and Collectors.",
                "SecurityGroupIngress": {
                    "Fn::If": [
                        "SourceSGfromCidr",
                        [
                            {
                                "IpProtocol": "tcp",
                                "FromPort": "2001",
                                "ToPort": "2001",
                                "CidrIp": {
                                    "Ref": "SGsourceVpcCidr"
                                }
                            },
                            {
                                "IpProtocol": "tcp",
                                "FromPort": "2003",
                                "ToPort": "2003",
                                "CidrIp": {
                                    "Ref": "SGsourceVpcCidr"
                                }
                            },
                            {
                                "IpProtocol": "udp",
                                "FromPort": "2003",
                                "ToPort": "2003",
                                "CidrIp": {
                                    "Ref": "SGsourceVpcCidr"
                                }
                            },
                            {
                                "IpProtocol": "tcp",
                                "FromPort": "3003",
                                "ToPort": "3003",
                                "CidrIp": {
                                    "Ref": "SGsourceVpcCidr"
                                }
                            }
                        ],
                        [
                            {
                                "IpProtocol": "tcp",
                                "FromPort": "2001",
                                "ToPort": "2001",
                                "SourceSecurityGroupId": {
                                    "Ref": "SGsourceSG"
                                }
                            },
                            {
                                "IpProtocol": "tcp",
                                "FromPort": "2003",
                                "ToPort": "2003",
                                "SourceSecurityGroupId": {
                                    "Ref": "SGsourceSG"
                                }
                            },
                            {
                                "IpProtocol": "udp",
                                "FromPort": "2003",
                                "ToPort": "2003",
                                "SourceSecurityGroupId": {
                                    "Ref": "SGsourceSG"
                                }
                            },
                            {
                                "IpProtocol": "tcp",
                                "FromPort": "3003",
                                "ToPort": "3003",
                                "SourceSecurityGroupId": {
                                    "Ref": "SGsourceSG"
                                }
                            }
                        ]
                    ]
                },
                "VpcId": {"Ref": "VPC"}
            }
        },
        "NetsilAOCPublicSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Ports for public access of Netsil AOC UI",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "AdminLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "AdminLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "AdminLocation"
                        }
                    }
                ],
                "VpcId": {"Ref": "VPC"}
            }
        }
    },

    "Metadata" : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
                {
                    "Label" : { "default":"Amazon EC2 Configuration" },
                    "Parameters" : [ "InstanceType", "VolumeSize", "KeyName" ]
                },
                {
                    "Label" : { "default" : "Network Configuration" },
                    "Parameters" : [ "VPC", "Subnet" ]
                },
                {
                    "Label" : { "default" : "Security Group Configuration" },
                    "Parameters" : [ "AdminLocation", "SGsource", "SGsourceSG", "SGsourceVpcCidr" ]
                }
            ],
            "ParameterLabels" : {
                "VPC" : { "default" : "VPC to Deploy To" },
                "Subnet" : { "default" : "Subnet to Deploy To" },
                "AdminLocation": { "default": "Public IP Address Range" },
                "SGsourceType": { "default":  "Source Type of Your Security Group" },
                "SGsourceSG": { "default":  "SG Source Type" },
                "SGsourceVpcCidr": { "default":  "Cidr Source Type" },

            }
        }
    },

    "Outputs": {
        "WebsiteURL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": [
                                "NetsilAOC",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            },
            "Description": "Netsil AOC Web UI. Please wait around ten minutes after stack creation for this link to be available."
        }
    }
}
